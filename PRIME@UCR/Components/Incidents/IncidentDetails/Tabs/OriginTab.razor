@using PRIME_UCR.Components.Controls
@using PRIME_UCR.Components.Incidents.LocationPickers
@using Microsoft.AspNetCore.Connections

<h3> Información sobre el origen </h3>
<br />
@if (Origin == null)
{
    <StatusMessage Message="Este valor está pendiente para finalizar la creación del incidente." Class="warning"/>
}
<StatusMessage Message="@_errorMessage" Class="danger"/>
<EditForm Model="_model" OnValidSubmit="@Save">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <DropDownMenu Data="@_dropdownValuesOrigin" Label="Tipo de origen" TextProperty="Item2"
                  Value="_selectedOriginType"
                  ValueChanged="@((Tuple<OriginType, string> o) => OnOriginTypeChange(o))"
                  ValueExpression="() => _selectedOriginType" />
    @if (_selectedOriginType.Item1 == OriginType.Household)
    {
        <HouseholdPicker @ref="@_householdPicker" Value="@Origin" ValueChanged="@OnOriginChange"/>
    }
    else if (_selectedOriginType.Item1 == OriginType.International)
    {
        <InternationalPicker @ref="@_intlPicker" Value="@Origin" ValueChanged="@OnOriginChange" />
    }
    else
    { 
        <MedicalCenterPicker @ref="@_medicalCenterPicker" Value="@Origin" ValueChanged="@OnOriginChange"/>
    }
    <div class="text-center">
        @if (Origin != null && Origin.Equals(_model.Origin))
        {
            <button disabled class="btn btn-outline-secondary">Cancelar</button>
            <button disabled type="submit" class="btn btn-primary">Guardar</button>
        }
        else
        {
            <button @onclick:preventDefault @onclick="@(() => LoadExistingValues(false))" class="btn btn-outline-secondary ">Cancelar</button>
            <button type="submit" class="btn btn-primary">Guardar</button>
        }
    </div>
</EditForm>
