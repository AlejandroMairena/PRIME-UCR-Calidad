@using PRIME_UCR.Components.Controls
@using PRIME_UCR.Components.Dashboard.Filters.LocationFilter

<div class="row">
    <div class="col-md-4">
        <EditForm Model="Value">
            <DropDownMenu Data="@_dropdownValuesOrigin" 
                          Label="Ubicación origen" 
                          TextProperty="Item2"
                          Value="_selectedOriginType"
                          ValueChanged="@((Tuple<OriginType, string> o) => OnOriginTypeChange(o))"
                          ValueExpression="() => _selectedOriginType"
                          UseValidation="false" 
                          Required="false"/>
        </EditForm>
    </div>
</div>
<Loading IsLoading="@_isLoading">
    @if(_selectedOriginType.Item1 != OriginType.SinFiltro)
    {
        @if (_selectedOriginType.Item1 == OriginType.Household)
        {
            <Loading IsLoading="@_isLoading">
                <EditForm Model="Value">
                    <FluentValidationValidator />
                    <div class="row">
                        <div class="col-xl-4 col-lg-6">
                            <DropDownMenu Data="@_provinces"
                                          Label="Provincia"
                                          TextProperty="Nombre"
                                          DefaultText="Sin filtro"
                                          Value="@Value.HouseholdOriginFilter.Province"
                                          ValueExpression="() => Value.HouseholdOriginFilter.Province"
                                          ValueChanged="@((Provincia p) => OnChangeProvince(p))"
                                          UseValidation="false"
                                          Required="false" />
                            @if (Value.HouseholdOriginFilter.Province != null)
                            {
                                <DropDownMenu Data="@_cantons"
                                              Label="Cantón"
                                              TextProperty="Nombre"
                                              DefaultText="Sin filtro"
                                              Value="@Value.HouseholdOriginFilter.Canton"
                                              ValueExpression="() => Value.HouseholdOriginFilter.Canton"
                                              ValueChanged="@((Canton c) => OnChangeCanton(c))"
                                              UseValidation="false"
                                              Required="false" />
                                if (Value.HouseholdOriginFilter.Canton != null)
                                {
                                    <DropDownMenu Data="@_districts"
                                                  Label="Distrito"
                                                  TextProperty="Nombre"
                                                  DefaultText="Sin filtro"
                                                  @bind-Value="Value.HouseholdOriginFilter.District"
                                                  UseValidation="false"
                                                  Required="false" />
                                }
                            }
                        </div>
                    </div>
                </EditForm>
            </Loading>
        }
        else if (_selectedOriginType.Item1 == OriginType.International)
        {
            <Loading IsLoading="_isLoading">
                <EditForm Model="Value">
                    <div class="row">
                        <div class="col-xl-4 col-lg-6">
                            <DropDownMenu Data="@_countries"
                                          T="Pais"
                                          Label="País"
                                          TextProperty="Nombre"
                                          DefaultText="Sin filtro"
                                          @bind-Value="@Value.InternationalOriginFilter.Country"
                                          UseValidation="false"
                                          Required="false" />
                        </div>
                    </div>
                </EditForm>
            </Loading>
        }
        else
        {
            <Loading IsLoading="_isLoading">
                <EditForm Model="Value">
                    <FluentValidationValidator />
                    <div class="row">
                        <div class="col-xl-6 col-lg-8">
                            <DropDownMenu T="CentroMedico" 
                                          Data="_medicalCenters"
                                          Label="Centro médico"
                                          DefaultText="Sin filtro"
                                          TextProperty="Nombre"
                                          Value="@Value.MedicalCenterOriginFilter.MedicalCenter"
                                          ValueExpression="() => Value.MedicalCenterOriginFilter.MedicalCenter"
                                          ValueChanged="@((CentroMedico mc) => OnChangeMedicalCenter(mc))" 
                                          UseValidation="false"
                                          Required="false"/>
                        </div>
                    </div>
                </EditForm>
            </Loading>

        }
    }
</Loading>
