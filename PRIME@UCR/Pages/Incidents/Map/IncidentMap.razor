@page "/map"

<h3>Mapa de incidentes en tiempo real</h3>
<br />
<Loading IsLoading="@(StateStore.Value is LoadingMapState)">
    @if (StateStore.Value is LoadedMapState s)
    {
        <div class="jumbotron white-panel" style="height: 100vh">
            <EditForm Model="s.Filter ?? new Modalidad()">
                <DropDownMenu Data="@s.AvailableFilters.ToList()"
                              Label="Filtro por tipo de unidad"
                              DefaultText="Sin filtro"
                              TextProperty="Tipo"
                              UseValidation="false"
                              Required="false"
                              Value="s.Filter"
                              ValueExpression="() => s.Filter"
                              ValueChanged="@((Modalidad f) => OnFilterChange(f))"
                              ValueComparer="@((Modalidad f) => f.Tipo == s.Filter.Tipo)"/>
            </EditForm>
            @if (s.GpsData.Any())
            {

            <RadzenGoogleMap style="height: 100%"
                             Zoom="10" ApiKey="@Configuration["MapApiKey"]"
                             Center="@(new GoogleMapPosition{ Lng = s.Center.Longitude, Lat = s.Center.Latitude })"
                             MarkerClick="@OnMarkerClick">
                <Markers>
                    @foreach (var gps in s.GpsData)
                    {
                        <RadzenGoogleMapMarker Title="@(gps.IncidentCode)"
                                               Label="@(gps.IncidentCode)"
                                               Position=@(new GoogleMapPosition {Lat = gps.CurrentLatitude, Lng = gps.CurrentLongitude})/>
                    }
                </Markers>
            </RadzenGoogleMap>
            }
            else
            {
                <br />
                <StatusMessage Class="info" Message="No hay traslados para el tipo de unidad seleccionado."></StatusMessage>
            }
        </div>
    }
</Loading>
